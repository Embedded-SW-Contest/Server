{"ast":null,"code":"var _jsxFileName = \"D:\\\\Server\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import React, {useState, useEffect} from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   console.log(\"안녕\");\n//   const [facilityData, setFacilityData] = useState(null);\n//   const Url = '/api/hello';\n//   useEffect(() => {\n//     console.log(\"22222\");\n//       const fetchData = async () => {\n//         try {\n//           console.log(\"33333\");\n//           const rankresponse = await axios.get(Url);\n//           console.log(rankresponse);\n//           console.log(\"444\");\n//           const port = rankresponse.data;\n//           console.log(port);\n\n//           setFacilityData(port);\n\n//         } catch (error) {\n//           console.error('Error fetching data:', error);\n//         }\n//       }\n//       fetchData();\n\n//   }, []);\n//   return (\n//       <div>\n//           <h2>안녕하세요ddd</h2>\n//           <div>{facilityData ? facilityData[0].uni_num : \"값이 없는데?...\"}</div>\n//       </div>\n//   );\n// }\n\n// export default App;\n\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mapElement = useRef(null);\n  const {\n    naver\n  } = window;\n  const [coordData, setCoordData] = useState(null); // 차량 좌표 데이터\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]); // 차량 마커 상태\n\n  const sseUrl = 'https://00gym.shop/api/cars'; // SSE 서버 URL\n\n  // SSE로 차량 데이터 받아오기\n  useEffect(() => {\n    const eventSource = new EventSource(sseUrl);\n    eventSource.onmessage = event => {\n      console.log('New data received from SSE:', event.data);\n      const port = JSON.parse(event.data); // 차량 좌표 데이터를 파싱\n      setCoordData(port); // 받아온 데이터를 상태로 저장\n    };\n    eventSource.onerror = error => {\n      console.error('SSE Error:', error);\n      eventSource.close(); // 에러 발생 시 연결 종료\n    };\n    return () => {\n      eventSource.close(); // 컴포넌트 언마운트 시 연결 종료\n    };\n  }, []);\n  useEffect(() => {\n    if (!mapElement.current || !naver) return;\n\n    // 지도 초기화\n    if (!map) {\n      const newMap = new naver.maps.Map(mapElement.current, {\n        mapDataControl: false,\n        logoControl: false,\n        center: new naver.maps.LatLng(35.164260, 128.094415),\n        // 기본 위치\n        zoom: 20,\n        zoomControl: false\n      });\n      setMap(newMap);\n    }\n\n    // coordData가 업데이트될 때마다 마커 갱신\n    if (coordData && map) {\n      // 기존 마커들 삭제\n      markers.forEach(marker => marker.setMap(null));\n\n      // 새로운 차량 좌표로 마커 생성\n      const newMarkers = coordData.map(car => {\n        const carPosition = new naver.maps.LatLng(car.car_lat, car.car_lon);\n\n        // 차량 마커 생성\n        const newMarker = new naver.maps.Marker({\n          position: carPosition,\n          map: map,\n          icon: {\n            content: `<div style=\"background-color: blue; border-radius: 50%; width: 30px; height: 30px;\"></div>`,\n            anchor: new naver.maps.Point(15, 15)\n          }\n        });\n\n        // 차량 반경 30m 원 생성\n        new naver.maps.Circle({\n          map: map,\n          center: carPosition,\n          radius: 30,\n          strokeColor: '#5347AA',\n          strokeOpacity: 0.8,\n          strokeWeight: 2,\n          fillColor: '#CFE7FF',\n          fillOpacity: 0\n        });\n        return newMarker;\n      });\n      setMarkers(newMarkers); // 마커 상태 업데이트\n\n      // 지도의 중심을 첫 번째 차량의 좌표로 설정\n      if (coordData.length > 0) {\n        const firstCarPosition = new naver.maps.LatLng(coordData[0].car_lat, coordData[0].car_lon);\n        map.setCenter(firstCarPosition);\n      }\n    }\n  }, [coordData, map]); // coordData와 map이 변경될 때 실행\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapElement,\n      style: {\n        minHeight: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"nRJJ7iuN8zJ+B+vCgJJ3roRDV7Y=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mapElement","naver","window","coordData","setCoordData","map","setMap","markers","setMarkers","sseUrl","eventSource","EventSource","onmessage","event","console","log","data","port","JSON","parse","onerror","error","close","current","newMap","maps","Map","mapDataControl","logoControl","center","LatLng","zoom","zoomControl","forEach","marker","newMarkers","car","carPosition","car_lat","car_lon","newMarker","Marker","position","icon","content","anchor","Point","Circle","radius","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","length","firstCarPosition","setCenter","children","ref","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Server/client/src/App.js"],"sourcesContent":["\r\n// import './App.css';\r\n// import React, {useState, useEffect} from 'react';\r\n// import axios from 'axios';\r\n\r\n\r\n// function App() {\r\n//   console.log(\"안녕\");\r\n//   const [facilityData, setFacilityData] = useState(null);\r\n//   const Url = '/api/hello';\r\n//   useEffect(() => {\r\n//     console.log(\"22222\");\r\n//       const fetchData = async () => {\r\n//         try {\r\n//           console.log(\"33333\");\r\n//           const rankresponse = await axios.get(Url);\r\n//           console.log(rankresponse);\r\n//           console.log(\"444\");\r\n//           const port = rankresponse.data;\r\n//           console.log(port);\r\n  \r\n//           setFacilityData(port);\r\n  \r\n//         } catch (error) {\r\n//           console.error('Error fetching data:', error);\r\n//         }\r\n//       }\r\n//       fetchData();\r\n      \r\n//   }, []);\r\n//   return (\r\n//       <div>\r\n//           <h2>안녕하세요ddd</h2>\r\n//           <div>{facilityData ? facilityData[0].uni_num : \"값이 없는데?...\"}</div>\r\n//       </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nfunction App () {\r\n  const mapElement = useRef(null);\r\n  const { naver } = window;\r\n  const [coordData, setCoordData] = useState(null); // 차량 좌표 데이터\r\n  const [map, setMap] = useState(null);\r\n  const [markers, setMarkers] = useState([]); // 차량 마커 상태\r\n\r\n  const sseUrl = 'https://00gym.shop/api/cars'; // SSE 서버 URL\r\n\r\n  // SSE로 차량 데이터 받아오기\r\n  useEffect(() => {\r\n    const eventSource = new EventSource(sseUrl);\r\n\r\n    eventSource.onmessage = (event) => {\r\n      console.log('New data received from SSE:', event.data);\r\n      const port = JSON.parse(event.data); // 차량 좌표 데이터를 파싱\r\n      setCoordData(port); // 받아온 데이터를 상태로 저장\r\n    };\r\n\r\n    eventSource.onerror = (error) => {\r\n      console.error('SSE Error:', error);\r\n      eventSource.close(); // 에러 발생 시 연결 종료\r\n    };\r\n\r\n    return () => {\r\n      eventSource.close(); // 컴포넌트 언마운트 시 연결 종료\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mapElement.current || !naver) return;\r\n  \r\n    // 지도 초기화\r\n    if (!map) {\r\n      const newMap = new naver.maps.Map(mapElement.current, {\r\n        mapDataControl: false,\r\n        logoControl: false,\r\n        center: new naver.maps.LatLng(35.164260, 128.094415), // 기본 위치\r\n        zoom: 20,\r\n        zoomControl: false,\r\n      });\r\n      setMap(newMap);\r\n    }\r\n  \r\n    // coordData가 업데이트될 때마다 마커 갱신\r\n    if (coordData && map) {\r\n      // 기존 마커들 삭제\r\n      markers.forEach(marker => marker.setMap(null));\r\n      \r\n      // 새로운 차량 좌표로 마커 생성\r\n      const newMarkers = coordData.map((car) => {\r\n        const carPosition = new naver.maps.LatLng(car.car_lat, car.car_lon);\r\n  \r\n        // 차량 마커 생성\r\n        const newMarker = new naver.maps.Marker({\r\n          position: carPosition,\r\n          map: map,\r\n          icon: {\r\n            content: `<div style=\"background-color: blue; border-radius: 50%; width: 30px; height: 30px;\"></div>`,\r\n            anchor: new naver.maps.Point(15, 15),\r\n          }\r\n        });\r\n  \r\n        // 차량 반경 30m 원 생성\r\n        new naver.maps.Circle({\r\n          map: map,\r\n          center: carPosition,\r\n          radius: 30,\r\n          strokeColor: '#5347AA',\r\n          strokeOpacity: 0.8,\r\n          strokeWeight: 2,\r\n          fillColor: '#CFE7FF',\r\n          fillOpacity: 0,\r\n        });\r\n  \r\n        return newMarker;\r\n      });\r\n  \r\n      setMarkers(newMarkers); // 마커 상태 업데이트\r\n  \r\n      // 지도의 중심을 첫 번째 차량의 좌표로 설정\r\n      if (coordData.length > 0) {\r\n        const firstCarPosition = new naver.maps.LatLng(coordData[0].car_lat, coordData[0].car_lon);\r\n        map.setCenter(firstCarPosition);\r\n      }\r\n    }\r\n  }, [coordData, map]); // coordData와 map이 변경될 때 실행\r\n\r\n  return (\r\n    <>\r\n      <div ref={mapElement} style={{ minHeight: '100vh' }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}